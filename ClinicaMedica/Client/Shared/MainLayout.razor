@inherits LayoutComponentBase
@inject IJSRuntime JS
@inject AuthenticationStateProvider AuthStateProv
@inject NavigationManager Navigation

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <ul class="navbar-nav">

        <AuthorizeView>
            <Authorized>
                <div class="top-row px-4">
                    <li class="nav-item me-2">
                        <a class="nav-link dark-text" href="register">
                            Hola, @context.User.Identity?.Name
                        </a>
                    </li>

                    <li class="nav-item">
                        <button class="btn btn-outline-dark" @onclick=Logout> Logout</button>
                    </li>
                </div>
                
            </Authorized>
            <NotAuthorized>
                <div class="top-row px-4">
                    <li class="nav-item">
                        <a class="nav-link dark-text" href="register">
                            Registro
                        </a>
                    </li>

                    <li class="nav-item">
                        <a class="nav-link dark-text" href="login">
                            Login
                        </a>
                    </li>
                </div>
            </NotAuthorized>
        </AuthorizeView>
        </ul>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    string email = "";
    string token = "";

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("localStorage.removeItem", "Token");
        await AuthStateProv.GetAuthenticationStateAsync();
        Navigation.NavigateTo("/login", forceLoad: true); // Redirige después de logout
    }
}
