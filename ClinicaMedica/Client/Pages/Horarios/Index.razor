@page "/horarios"
@using ClinicaMedica.Client.Services
@using ClinicaMedica.Shared.DTOs.Basic
@inject HttpClient Http


<PageTitle>Horarios</PageTitle>

<p>
    <a href="/crearhorario">Crear Horario</a>
</p>

@if(!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">
        <strong>Error:</strong>@ErrorMessage
    </div>
}

@if (ListaHorarios!=null && ListaHorarios.Any())
{
    <ClinicaMedica.Client.Components.Horarios ListaHorarios="ListaHorarios"></ClinicaMedica.Client.Components.Horarios>
}
else if(string.IsNullOrEmpty(ErrorMessage))
{
    <p>No hay horarios disponibles.</p>
}


@code{
    public List<HorariosDTO> ListaHorarios;
    string ErrorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var response = await Http.GetAsync("api/Horarios");
            if(response.IsSuccessStatusCode)
            {
                ListaHorarios = await response.Content.ReadFromJsonAsync<List<HorariosDTO>>();
            }
            else
            {
                ErrorMessage = $"Error al obtener los horarios. Código: {response.StatusCode}";
            }
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"Error en la conexión con la API: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error inesperado: {ex.Message}");
        }
    }
}