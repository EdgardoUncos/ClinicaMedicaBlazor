@page "/crearservicio"
@using ClinicaMedica.Shared.DTOs.Basic
@using ClinicaMedica.Shared.DTOs.Create
@using ClinicaMedica.Shared.ViewModels
@using ClinicaMedica.Client.Components
@inject HttpClient Http
@inject NavigationManager Nav


<h2>Servicios</h2>

<p>
    <a asp-action="crearservicio">Crear servicio</a>
</p>

<div class="row">
    <div class="col-md-4">
        <EditForm OnValidSubmit="Crear" Model="servicio">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label class="control-label">Nombre</label>
                <input @bind-value=servicio.Nombre class="form-control" />
                
            </div>
            <div class="form-group">
                <label class="control-label">Descripcion</label>
                <input @bind-value=servicio.Descripcion class="form-control" />
                
            </div>
            <div class="form-group">
                <label  class="control-label">Precio</label>
                <input @bind-value=servicio.Precio class="form-control" />
               
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </EditForm>
    </div>
</div>



@code {
    ServiciosCreacionDTO servicio = new ServiciosCreacionDTO();

    
    public async Task Crear()
    {
        try
        {
            var response = await Http.PostAsJsonAsync("api/servicios", servicio);
            if (response.IsSuccessStatusCode)
            {
                Nav.NavigateTo("/servicios");
            }
        }
        catch (Exception e)
        {

            Console.WriteLine(e.Message);
        }
    }

    private void NavigateToDetails(int id)
    {
        Nav.NavigateTo($"/serviciodetail/{id}");
    }

    
}
